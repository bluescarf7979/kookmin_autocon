<launch>
    <!-- AR arguments -->
    <arg name="marker_size" default="10.0" />
	<arg name="max_new_marker_error" default="0.08" />
	<arg name="max_track_error" default="0.2" />
	<arg name="cam_image_topic" default="/usb_cam/image_raw" />
	<arg name="cam_info_topic" default="/usb_cam/camera_info" />
	<arg name="output_frame" default="/usb_cam" />

    <!-- yolo arguments -->
    
    <!-- Detection configuration -->
    <!-- <arg name="weights" default="/home/nvidia/xycar_ws/src/yolov5_ros/src/yolov5/best.pt"/>
    <arg name="data" default="$(find yolov5_ros)/src/yolov5/data.yaml"/>
    <arg name="confidence_threshold" default="0.75"/>
    <arg name="iou_threshold" default="0.45"/>
    <arg name="maximum_detections" default="1000"/>
    <arg name="device" default="0"/>
    <arg name="agnostic_nms" default="true"/>
    <arg name="line_thickness" default="3"/>
    <arg name="dnn" default="true"/>
    <arg name="half" default="false"/> -->
    <!-- replace imgsz -->
    <!-- <arg name="inference_size_h" default="640"/>
    <arg name="inference_size_w" default="640"/> -->
    <!-- Visualize using OpenCV window -->
    <!-- <arg name="view_image" default="true"/> -->
    <!-- ROS topics -->
    <!-- <arg name="input_image_topic" default="/usb_cam/image_rect_color"/>
    <arg name="output_topic" default="/yolov5/detections"/> -->
    <!-- Optional topic (publishing annotated image) -->
    <!-- <arg name="publish_image" default="false"/>
    <arg name="output_image_topic" default="/yolov5/image_out"/> -->

    <!--어떤 차를 인식해야하는지 입력값 Sonata, Avante, Grandeur-->
    <!-- <arg name="car_name" default="Avante"/> -->


    <!-- find ar_tag node-->
	<node name="ar_track_alvar" pkg="ar_track_alvar" type="individualMarkersNoKinect" respawn="false" output="screen">
		<param name="marker_size"           type="double" value="$(arg marker_size)" />
		<param name="max_new_marker_error"  type="double" value="$(arg max_new_marker_error)" />
		<param name="max_track_error"       type="double" value="$(arg max_track_error)" />
		<param name="output_frame"          type="string" value="$(arg output_frame)" />

		<remap from="camera_image"  to="$(arg cam_image_topic)" />
		<remap from="camera_info"   to="$(arg cam_info_topic)" />
	</node>  

  <!-- usb_cam --> 
  <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device" value="/dev/videoCAM" />
    <param name="autoexposure" value="false"/>
    <param name="exposure" value="60"/>
    <param name="image_width" value="640" />
    <param name="image_height" value="480" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="usb_cam" />
    <param name="io_method" value="mmap"/>
  </node>
<!-- 
    <node pkg="yolov5_ros" name="detect" type="detect.py" output="screen">
        <param name="weights" value="$(arg weights)"/>
        <param name="data" value="$(arg data)"/>
        <param name="confidence_threshold" value="$(arg confidence_threshold)"/>
        <param name="iou_threshold" value="$(arg iou_threshold)" />
        <param name="maximum_detections" value="$(arg maximum_detections)"/>
        <param name="device" value="$(arg device)" />
        <param name="agnostic_nms" value="$(arg agnostic_nms)" />
        <param name="line_thickness" value="$(arg line_thickness)"/>
        <param name="dnn" value="$(arg dnn)"/>
        <param name="half" value="$(arg half)"/>

        <param name="inference_size_h" value="$(arg inference_size_h)"/>
        <param name="inference_size_w" value="$(arg inference_size_w)"/>

        <param name="input_image_topic" value="$(arg input_image_topic)"/>
        <param name="output_topic" value="$(arg output_topic)"/>

        <param name="view_image" value="$(arg view_image)"/>

        <param name="publish_image" value="$(arg publish_image)"/>
        <param name="output_image_topic" value="$(arg output_image_topic)"/>
        <param name="car_name" value="$(arg car_name)"/>

    </node> -->

    <!-- lidar -->
    <include file="$(find xycar_lidar)/launch/xycar_lidar.launch" />

    <!-- imu -->
    <include file="$(find xycar_imu)/launch/xycar_imu.launch" />

    <!-- motor -->
    <include file="$(find xycar_motor)/launch/xycar_motor.launch" />

    <!-- ultrasonic -->
    <include file="$(find xycar_ultrasonic)/launch/xycar_ultrasonic.launch" />

    <!-- main script -->
    <node name="mission_drive" pkg="auto_drive" type="main.py" output="screen"/>

</launch>